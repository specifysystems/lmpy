:py:mod:`lmpy.data_preparation.occurrence_transformation`
=========================================================

.. py:module:: lmpy.data_preparation.occurrence_transformation

.. autoapi-nested-parse::

   This module contains tools for transforming raw occurrence data.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   lmpy.data_preparation.occurrence_transformation.get_chunk_key
   lmpy.data_preparation.occurrence_transformation.sort_points
   lmpy.data_preparation.occurrence_transformation.split_points
   lmpy.data_preparation.occurrence_transformation.wrangle_points



.. py:function:: get_chunk_key(value, group_position, group_size, filler_char='a')

   Get the chunk key from the value.

   :param value: The value to pull the chunk key from.
   :type value: str
   :param group_position: The position of the group chunk.
   :type group_position: int
   :param group_size: The number of characters that comprises the group.
   :type group_size: int
   :param filler_char: What to use for filler characters in case the group chunk is
                       less than the desired number of characters.
   :type filler_char: str

   :returns: The group chunk key from the value.
   :rtype: str


.. py:function:: sort_points(readers, writer, wranglers=None)

   Sort and clean occurrence points.

   :param readers (:obj:`list` of: obj:`PointReader): A list of point readers.
   :param writer: A point writer to output points.
   :type writer: PointWriter
   :param wranglers: An optional list of data wranglers
                     to use to modify / filter points.
   :type wranglers: list of DataWranglers


.. py:function:: split_points(readers, writers, group_attribute, group_size, group_position, wranglers=None)

   Split points in the readers into smaller chunks for easier processing.

   :param readers (:obj:`list` of: obj:`PointReader): A list of point readers.
   :param writers: A dictionary of {combo: PointWriter} used for writing
                   points.
   :type writers: dict
   :param group_attribute: The Point attribute to be used to determine
                           which group the Point belongs to.
   :type group_attribute: str
   :param group_size: How many characters to use for determining group.
   :type group_size: int
   :param group_position: Starting character index to use for determining
                          group.
   :type group_position: int
   :param wranglers: An optional list of data wranglers
                     to use to modify / filter points.
   :type wranglers: list of DataWranglers

   .. note:: group_attribute should be used when instantiating the Point readers.


.. py:function:: wrangle_points(readers, writer, wranglers=None)

   Wrangle input points and write output points.

   :param readers (:obj:`list` of: obj:`PointReader): A list of point readers.
   :param writer: A point writer to output points.
   :type writer: PointWriter
   :param wranglers: An optional list of data wranglers
                     to use to modify / filter points.
   :type wranglers: list of DataWranglers


