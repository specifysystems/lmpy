:py:mod:`lmpy.data_wrangling.occurrence.attribute_modifier_wrangler`
====================================================================

.. py:module:: lmpy.data_wrangling.occurrence.attribute_modifier_wrangler

.. autoapi-nested-parse::

   Module containing attribute modifier occurrence data wrangler.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   lmpy.data_wrangling.occurrence.attribute_modifier_wrangler.AttributeModifierWrangler




.. py:class:: AttributeModifierWrangler(attribute_name, attribute_func, **params)

   Bases: :py:obj:`lmpy.data_wrangling.occurrence.base._OccurrenceDataWrangler`

   Constructor for AttributeModifierWrangler class.

   :param attribute_name: The name of the attribute to modify.
   :type attribute_name: str
   :param attribute_func: A function to generate values for a point.
   :type attribute_func: Method
   :param \*\*params: Extra parameters to be sent to the base class.
   :type \*\*params: dict

   .. py:attribute:: name
      :annotation: = AttributeModifierWrangler

      

   .. py:attribute:: version
      :annotation: = 1.0

      

   .. py:method:: _get_attribute_func(self, attribute_func)

      Get the attribute function for generating values for a point.

      :param attribute_func: A function or dictionary of parameters.
      :type attribute_func: Method or dict

      :returns: A method for getting attribute value.
      :rtype: Method


   .. py:method:: _get_constant_func(val)
      :staticmethod:

      Get a function that returns a constant.

      :param val: A constant value to return.
      :type val: object

      :returns: A method that returns a constant.
      :rtype: Method


   .. py:method:: _modify_point(self, point)

      Update point attributes.

      :param point: A point to modify.
      :type point: Point

      :returns: Modified point and boolean if point was modified.
      :rtype: Point, bool



