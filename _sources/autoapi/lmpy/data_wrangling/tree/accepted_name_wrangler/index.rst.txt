:py:mod:`lmpy.data_wrangling.tree.accepted_name_wrangler`
=========================================================

.. py:module:: lmpy.data_wrangling.tree.accepted_name_wrangler

.. autoapi-nested-parse::

   Module containing occurrence data wranglers for modifying point data.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   lmpy.data_wrangling.tree.accepted_name_wrangler.AcceptedNameTreeWrangler




.. py:class:: AcceptedNameTreeWrangler(name_map=None, name_resolver=None, purge_failures=True, **params)

   Bases: :py:obj:`lmpy.data_wrangling.tree.base._TreeDataWrangler`, :py:obj:`lmpy.data_wrangling.common.accepted_name_wrangler._AcceptedNameWrangler`

   Constructor for AcceptedNameTreeModifier class.

   :param name_map: A map of original name to accepted name.
   :type name_map: dict
   :param name_resolver: If provided, use this method for getting new
                         accepted names.  If set to 'gbif', use GBIF name resolution.
   :type name_resolver: str or Method
   :param purge_failures: Should failures be purged from the tree.
   :type purge_failures: bool
   :param \*\*params: Keyword parameters to pass to _TreeDataWrangler.
   :type \*\*params: dict

   .. py:attribute:: name
      :annotation: = AcceptedNameTreeWrangler

      

   .. py:attribute:: version
      :annotation: = 1.0

      

   .. py:method:: wrangle_tree(self, tree)

      Wrangle a tree.

      :param tree: A tree to wrangle.
      :type tree: TreeWrapper

      :returns: The tree with accepted taxon names.
      :rtype: TreeWrapper



